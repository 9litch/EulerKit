puts "Loading .kick file"

def date
  DateTime.now.strftime("%Y-%m-%d %H:%M:%S")
end

def git_branch
  `git symbolic-ref --short -q HEAD`.strip
end

def git_changed_files
  `git ls-files -m`.split
end

def has_changes(file)
  git_changed_files.include? file
end

def git_commit(files = [])
  changed_files = git_changed_files
  files.keep_if { |file| changed_files.include?(file) }
  unless files.empty?
    execute("git add #{files.join(" ")}")
    execute("git commit -m \"auto-commit on file save at #{date}\"")
  end
end

# .kick is usually filterd out by the ReloadDotKick handler
# this is run when .kick is reloaded, so add it to git
if git_branch == "auto-commit" && has_changes(".kick")
  git_commit [".kick"]
end

process do |files|
  if git_branch == 'auto-commit'
    git_commit(files)
    files.clear
  else
    puts "Not processing files on the #{branch} branch"
    files.clear
  end
end